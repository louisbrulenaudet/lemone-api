[project]
name = "lemone-api"
package = false
version = "0.1.2"
description = "API for processing french tax related texts using specialized models."
authors = [{name = "Louis BrulÃ© Naudet", email = "contact@louisbrulenaudet.com"}]
license = {text = "Apache-2.0"}
readme = "README.md"
keywords = ["tax", "nlp", "french", "text-processing", "machine-learning", "api"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: French",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: General"
]

requires-python = ">=3.11"
dependencies = [
    "accelerate>=1.3.0",
    "aiocache>=0.12.3",
    "dramatiq[redis,watch]>=1.17.1",
    "fastapi[standard]>=0.115.7",
    "httpx>=0.28.1",
    "logfire>=3.3.0",
    "pydantic>=2.10.6",
    "pydantic-settings>=2.7.1",
    "sentence-transformers>=3.4.0",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=4.1.0",
    "pre-commit-uv>=4.1.4",
    "pyright>=1.1.392.post0",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.23.5",
    "pytest-cov>=4.1.0",
    "ruff>=0.9.3",
]

[tool.pytest.ini_options]
pythonpath = ["."]
addopts = "--maxfail=1 --disable-warnings -q --cov=app --cov-report=term-missing"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    "W",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # flake8-annotations
    "ANN",
    # flake8-print
    "T20",
]
ignore = [
    "B008",
    "E501",
    "ANN101",
    "ANN102"
]

[tool.ruff.lint.per-file-ignores]
"**/{tests,docs}/*" = [
    "ANN",
    "E402",
]

[tool.logfire]
pydantic_plugin_record = "all"

[tool.ruff]
fix = true

[tool.pyright]
exclude = [
    "**/tests"
]

[tool.ruff.format]
quote-style = "double"
line-ending = "auto"

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.coverage.run]
branch = true
source = ["app"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
